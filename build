#!/bin/bash
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
LIGHTGRAY='\033[0;37m'
DARKGRAY='\033[1;30m'
NC='\033[0m' # No Color

source ./environment.sh

ERROR=false
if [ ! -z $REPO_NAME ];
then
  printf "REPO_NAME: ${GREEN}OK${NC} ${DARKGRAY}${REPO_NAME}${NC}\n"
else
  printf "REPO_NAME: ${RED}NOT OK !!!${NC}\n"
  ERROR=true
fi

if [ ! -z $ACCOUNT_ID ];
then
  printf "ACCOUNT_ID: ${GREEN}OK${NC} ${DARKGRAY}${ACCOUNT_ID}${NC}\n"
else
  printf "ACCOUNT_ID: ${RED}NOT OK !!!${NC}\n"
  ERROR=true
fi

if [ ! -z $AWS_REGION ];
then
  printf "AWS_REGION: ${GREEN}OK${NC} ${DARKGRAY}${AWS_REGION}${NC}\n"
else
  printf "AWS_REGION: ${RED}NOT OK !!!${NC}\n"
  ERROR=true
fi

if [ $ERROR = true ]; then
  echo Exiting with error.
  exit 1
fi


# Build App
#======================================
tsc --project .

# Build and push Docker Image
#======================================

REPO_EXISTS="$(aws ecr describe-repositories | grep \"$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO_NAME\")"

if [[ $REPO_EXISTS = "" ]]; 
then
    printf "Repo [ ${YELLOW}$REPO_NAME${NC} ] does not exist. Creating new repo.\n"
    echo "$(aws ecr create-repository --repository-name $REPO_NAME --image-scanning-configuration scanOnPush=true)"
else
    printf "Repo [ $REPO_NAME ] exist. Continuing\n"
fi


docker build -t $REPO_NAME .

docker tag $REPO_NAME:latest $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO_NAME:latest

aws ecr get-login-password | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

docker push $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO_NAME:latest

# Deploy using AWS SAM
#======================================



